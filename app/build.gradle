/*
 * The contents of this file are subject to the terms of the Common Development and
 * Distribution License (the License). You may not use this file except in compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
 * specific language governing permission and limitations under the License.
 *
 * When distributing Covered Software, include this CDDL Header Notice in each file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions copyright [year] [name of copyright owner]".
 *
 * Copyright 2016 ForgeRock AS.
 */
apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.forgerock.authenticator"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    // Workaround for compile issue with Robolectric, which should be fixed in 3.1
    // https://github.com/robolectric/robolectric/issues/1862
    useLibrary 'org.apache.http.legacy'
}

repositories {
    maven {
        url 'http://maven.forgerock.org/repo/releases/'
    }
}

dependencies {

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude module: 'support-annotations'
    }
    androidTestCompile 'com.squareup.spoon:spoon-client:1.5.0'
    androidTestCompile 'com.jraska:falcon:1.0.1'
    androidTestCompile 'com.jraska:falcon-spoon-compat:1.0.1'

    testCompile 'org.testng:testng:6.8.5'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile('uk.org.lidalia:slf4j-test:1.2.0') {
        exclude group: 'org.slf4j'
    }

    // Gson for Serialisation
    compile 'com.google.code.gson:gson:2.6.2'
    // ZXing for QR Code library
    compile 'com.google.zxing:core:3.2.1'
    // For image management
    compile 'com.squareup.picasso:picasso:2.5.2'
    // GCM Notifications
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:support-v4:23.2.0'
    // Logging framework
    compile 'org.slf4j:slf4j-api:1.7.18'
    apk 'org.slf4j:slf4j-android:1.7.18'
    // Guice
    compile 'org.roboguice:roboguice:3.+'
    provided 'org.roboguice:roboblender:3.+'
    // JWT
    compile 'org.forgerock.commons:json-web-token:3.0.3'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.6.201602180812"
}

task generateCoverage(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    sourceDirectories = files('src/main/java')
    classDirectories = fileTree('build/intermediates/classes/debug') {
        exclude 'android', 'com/google', '**/R$*.class', '**/R.class', '**/BuildConfig.class'
    }
    executionData = files('build/jacoco/testDebugUnitTest.exec')
}

apply plugin: 'com.google.gms.google-services'

apply plugin: 'spoon'
