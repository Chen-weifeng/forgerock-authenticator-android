/*
 * The contents of this file are subject to the terms of the Common Development and
 * Distribution License (the License). You may not use this file except in compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
 * specific language governing permission and limitations under the License.
 *
 * When distributing Covered Software, include this CDDL Header Notice in each file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions copyright [year] [name of copyright owner]".
 *
 * Copyright 2016 ForgeRock AS.
 */

package com.forgerock.authenticator.message;

import android.os.Bundle;
import android.app.Activity;
import android.widget.TextView;

import com.forgerock.authenticator.R;

/**
 * A new message activity is a UI activity that displays the content of a message to the user.
 * At present the content of the message is held in the Intent object.
 *
 * Intents when marked as not exported are suitable for passing messages between components
 * of an application. {@see https://developer.android.com/training/articles/security-tips.html#IPC}
 *
 * An alternative to storing the body of the message in an Intent would be to save the
 * message locally and reference it by an ID which would be passed through the Intent.
 */
public class NewMessageActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // TODO: validate contents of the Intent are correct and could only have been generated by the OpenAM cluster.
        // TODO: Capture some unique information from the OpenAM cluster which is used for signing/encryption.

        // display the message stored in the intent
        setContentView(R.layout.activity_new_message);
        ((TextView) findViewById(R.id.message_title)).setText(getIntent().getStringExtra(MessageConstants.TITLE));
        ((TextView) findViewById(R.id.message_content)).setText(getIntent().getStringExtra(MessageConstants.MESSAGE));
    }

    @Override
    protected void onPause() {
        super.onPause();
        finish(); // dispose of the message when navigating away
    }
}
